/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
/ {



 behaviors {
        layer_toggle_ht: hold_tap_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&tog 1>;
        };
    };




    keymap {



        compatible = "zmk,keymap";

        Keypad { // Layer 0
            display-name = "KEYPAD";
// ----------------------------------------------
// |     Z     |     M     |     K     |
// |     A     |     B     |     C     |
            bindings = <
                     &kp ESC          &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp BACKSPACE
                     &kp KP_DIVIDE    &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_MINUS  
                     &kp KP_MULTIPLY  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_PLUS
 &layer_toggle_ht    &kp KP_EQUAL     &kp KP_N0                 &kp KP_DOT                   &kp KP_ENTER
            >;
        };

        Design { // Layer 1
            display-name = "DESIGN";
// ----------------------------------------------
// |      A      |       B       |       C      |
// |    &trans   |    &trans     |     &trans   |
            bindings = <
                     &kp ESC          &kp L   &kp R     &kp C      &kp DEL
                     &kp S            &kp T   &kp O     &kp D      &kp M  
                     &kp LSHIFT       &kp E   &kp Q     &kp V      &kp P
 &layer_toggle_ht    &kp KP_EQUAL     &kp KP_N0         &kp H                  &kp KP_ENTER
            >;
        };

         abc { // Layer 1
            display-name = "FUNCTION";
// ----------------------------------------------
// |      A      |       B       |       C      |
// |    &trans   |    &trans     |     &trans   |
            bindings = <
                        &ext_power EP_TOG    &bootloader   &sys_reset     &kp A      &bootloader
                        &kp C                &kp Z         &kp M          &kp K      &kp A  
                        &kp B                &kp C         &kp Z          &kp M      &kp K
    &layer_toggle_ht    &kp B                       &kp C                 &kp B      &kp P
            >;
        };


    };


 };
